{
  "version": 3,
  "sources": ["../../../../node_modules/draft-js-import-element/esm/lib/replaceTextWithMeta.js", "../../../../node_modules/draft-js-import-element/esm/stateFromElement.js", "../../../../node_modules/synthetic-dom/esm/SyntheticDOM.js", "../../../../node_modules/draft-js-import-element/esm/lib/Constants.js", "../../../../node_modules/draft-js-import-html/esm/parseHTML.js", "../../../../node_modules/draft-js-import-html/esm/stateFromHTML.js"],
  "sourcesContent": ["export default function replaceTextWithMeta(subject, searchText, replaceText) {\n  var text = subject.text,\n      characterMeta = subject.characterMeta;\n  var searchTextLength = searchText.length;\n  var replaceTextLength = replaceText.length;\n  var resultTextParts = []; // Get empty set of same kind as characterMeta.\n\n  var resultCharMeta = characterMeta.slice(0, 0);\n  var lastEndIndex = 0;\n  var index = text.indexOf(searchText);\n\n  while (index !== -1) {\n    resultTextParts.push(text.slice(lastEndIndex, index) + replaceText);\n    resultCharMeta = resultCharMeta.concat(characterMeta.slice(lastEndIndex, index), // Use the metadata of the first char we are replacing.\n    repeatSeq(characterMeta.slice(index, index + 1), replaceTextLength));\n    lastEndIndex = index + searchTextLength;\n    index = text.indexOf(searchText, lastEndIndex);\n  }\n\n  resultTextParts.push(text.slice(lastEndIndex));\n  resultCharMeta = resultCharMeta.concat(characterMeta.slice(lastEndIndex));\n  return {\n    text: resultTextParts.join(''),\n    characterMeta: resultCharMeta\n  };\n}\n\nfunction repeatSeq(seq, count) {\n  var result = seq.slice(0, 0);\n\n  while (count-- > 0) {\n    result = result.concat(seq);\n  }\n\n  return result;\n}", "function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport replaceTextWithMeta from './lib/replaceTextWithMeta';\nimport { CharacterMetadata, ContentBlock, ContentState, genKey } from 'draft-js';\nimport { List, Map, OrderedSet, Repeat, Seq } from 'immutable';\nimport { BLOCK_TYPE, ENTITY_TYPE, INLINE_STYLE } from 'draft-js-utils';\nimport { NODE_TYPE_ELEMENT, NODE_TYPE_TEXT } from 'synthetic-dom';\nimport { INLINE_ELEMENTS, SPECIAL_ELEMENTS, SELF_CLOSING_ELEMENTS } from './lib/Constants';\nvar DATA_URL = /^data:/i;\nvar NO_STYLE = OrderedSet();\nvar NO_ENTITY = null;\nvar EMPTY_BLOCK = new ContentBlock({\n  key: genKey(),\n  text: '',\n  type: BLOCK_TYPE.UNSTYLED,\n  characterList: List(),\n  depth: 0\n});\nvar LINE_BREAKS = /(\\r\\n|\\r|\\n)/g; // We use `\\r` because that character is always stripped from source (normalized\n// to `\\n`), so it's safe to assume it will only appear in the text content when\n// we put it there as a placeholder.\n\nvar SOFT_BREAK_PLACEHOLDER = '\\r';\nvar ZERO_WIDTH_SPACE = \"\\u200B\";\nvar DATA_ATTRIBUTE = /^data-([a-z0-9-]+)$/; // Map element attributes to entity data.\n\nvar ELEM_ATTR_MAP = {\n  a: {\n    href: 'url',\n    rel: 'rel',\n    target: 'target',\n    title: 'title'\n  },\n  img: {\n    src: 'src',\n    alt: 'alt',\n    width: 'width',\n    height: 'height'\n  }\n};\n\nvar getEntityData = function getEntityData(tagName, element) {\n  var data = {};\n\n  if (ELEM_ATTR_MAP.hasOwnProperty(tagName)) {\n    var attrMap = ELEM_ATTR_MAP[tagName];\n\n    for (var i = 0; i < element.attributes.length; i++) {\n      var _element$attributes$i = element.attributes[i],\n          name = _element$attributes$i.name,\n          value = _element$attributes$i.value;\n\n      if (typeof value === 'string') {\n        var strVal = value;\n\n        if (attrMap.hasOwnProperty(name)) {\n          var newName = attrMap[name];\n          data[newName] = strVal;\n        } else if (DATA_ATTRIBUTE.test(name)) {\n          data[name] = strVal;\n        }\n      }\n    }\n  }\n\n  return data;\n}; // Functions to create entities from elements.\n\n\nvar ElementToEntity = {\n  a: function a(generator, tagName, element) {\n    var data = getEntityData(tagName, element); // Don't add `<a>` elements with invalid href.\n\n    if (isAllowedHref(data.url)) {\n      return generator.createEntity(ENTITY_TYPE.LINK, data);\n    }\n  },\n  img: function img(generator, tagName, element) {\n    var data = getEntityData(tagName, element); // Don't add `<img>` elements with no src.\n\n    if (data.src != null) {\n      return generator.createEntity(ENTITY_TYPE.IMAGE, data);\n    }\n  }\n};\n\nvar ContentGenerator =\n/*#__PURE__*/\nfunction () {\n  // This will be passed to the customInlineFn to allow it\n  // to return a Style() or Entity().\n  function ContentGenerator() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ContentGenerator);\n\n    _defineProperty(this, \"contentStateForEntities\", void 0);\n\n    _defineProperty(this, \"blockStack\", void 0);\n\n    _defineProperty(this, \"blockList\", void 0);\n\n    _defineProperty(this, \"depth\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"inlineCreators\", {\n      Style: function (_Style) {\n        function Style(_x) {\n          return _Style.apply(this, arguments);\n        }\n\n        Style.toString = function () {\n          return _Style.toString();\n        };\n\n        return Style;\n      }(function (style) {\n        return {\n          type: 'STYLE',\n          style: style\n        };\n      }),\n      Entity: function Entity(type, data) {\n        var mutability = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'MUTABLE';\n        return {\n          type: 'ENTITY',\n          entityKey: _this.createEntity(type, toStringMap(data), mutability)\n        };\n      }\n    });\n\n    this.options = options;\n    this.contentStateForEntities = ContentState.createFromBlockArray([]); // This represents the hierarchy as we traverse nested elements; for\n    // example [body, ul, li] where we must know li's parent type (ul or ol).\n\n    this.blockStack = []; // This is a linear list of blocks that will form the output; for example\n    // [p, li, li, blockquote].\n\n    this.blockList = [];\n    this.depth = 0;\n  }\n\n  _createClass(ContentGenerator, [{\n    key: \"process\",\n    value: function process(element) {\n      this.processBlockElement(element);\n      var contentBlocks = [];\n      this.blockList.forEach(function (block) {\n        var _concatFragments = concatFragments(block.textFragments),\n            text = _concatFragments.text,\n            characterMeta = _concatFragments.characterMeta;\n\n        var includeEmptyBlock = false; // If the block contains only a soft break then don't discard the block,\n        // but discard the soft break.\n\n        if (text === SOFT_BREAK_PLACEHOLDER) {\n          includeEmptyBlock = true;\n          text = '';\n        }\n\n        if (block.tagName === 'pre') {\n          var _trimLeadingNewline = trimLeadingNewline(text, characterMeta);\n\n          text = _trimLeadingNewline.text;\n          characterMeta = _trimLeadingNewline.characterMeta;\n        } else {\n          var _collapseWhiteSpace = collapseWhiteSpace(text, characterMeta);\n\n          text = _collapseWhiteSpace.text;\n          characterMeta = _collapseWhiteSpace.characterMeta;\n        } // Previously we were using a placeholder for soft breaks. Now that we\n        // have collapsed whitespace we can change it back to normal line breaks.\n\n\n        text = text.split(SOFT_BREAK_PLACEHOLDER).join('\\n'); // Discard empty blocks (unless otherwise specified).\n\n        if (text.length || includeEmptyBlock) {\n          contentBlocks.push(new ContentBlock({\n            key: genKey(),\n            text: text,\n            type: block.type,\n            characterList: characterMeta.toList(),\n            depth: block.depth,\n            data: block.data ? Map(block.data) : Map()\n          }));\n        }\n      });\n\n      if (!contentBlocks.length) {\n        contentBlocks = [EMPTY_BLOCK];\n      }\n\n      return ContentState.createFromBlockArray(contentBlocks, this.contentStateForEntities.getEntityMap());\n    }\n  }, {\n    key: \"getBlockTypeFromTagName\",\n    value: function getBlockTypeFromTagName(tagName) {\n      var blockTypes = this.options.blockTypes;\n\n      if (blockTypes && blockTypes[tagName]) {\n        return blockTypes[tagName];\n      }\n\n      switch (tagName) {\n        case 'li':\n          {\n            var parent = this.blockStack.slice(-1)[0];\n            return parent.tagName === 'ol' ? BLOCK_TYPE.ORDERED_LIST_ITEM : BLOCK_TYPE.UNORDERED_LIST_ITEM;\n          }\n\n        case 'blockquote':\n          {\n            return BLOCK_TYPE.BLOCKQUOTE;\n          }\n\n        case 'h1':\n          {\n            return BLOCK_TYPE.HEADER_ONE;\n          }\n\n        case 'h2':\n          {\n            return BLOCK_TYPE.HEADER_TWO;\n          }\n\n        case 'h3':\n          {\n            return BLOCK_TYPE.HEADER_THREE;\n          }\n\n        case 'h4':\n          {\n            return BLOCK_TYPE.HEADER_FOUR;\n          }\n\n        case 'h5':\n          {\n            return BLOCK_TYPE.HEADER_FIVE;\n          }\n\n        case 'h6':\n          {\n            return BLOCK_TYPE.HEADER_SIX;\n          }\n\n        case 'pre':\n          {\n            return BLOCK_TYPE.CODE;\n          }\n\n        case 'figure':\n          {\n            return BLOCK_TYPE.ATOMIC;\n          }\n\n        default:\n          {\n            return BLOCK_TYPE.UNSTYLED;\n          }\n      }\n    }\n  }, {\n    key: \"processBlockElement\",\n    value: function processBlockElement(element) {\n      if (!element) {\n        return;\n      }\n\n      var customBlockFn = this.options.customBlockFn;\n      var tagName = element.nodeName.toLowerCase();\n      var type;\n      var data;\n\n      if (customBlockFn) {\n        var customBlock = customBlockFn(element);\n\n        if (customBlock != null) {\n          type = customBlock.type;\n          data = customBlock.data;\n        }\n      }\n\n      var isCustomType = true;\n\n      if (type == null) {\n        isCustomType = false;\n        type = this.getBlockTypeFromTagName(tagName);\n      }\n\n      if (type === BLOCK_TYPE.CODE) {\n        var language = element.getAttribute('data-language');\n\n        if (language) {\n          data = _objectSpread({}, data, {\n            language: language\n          });\n        }\n      }\n\n      var hasDepth = canHaveDepth(type);\n      var allowRender = !SPECIAL_ELEMENTS.hasOwnProperty(tagName);\n\n      if (!isCustomType && !hasSemanticMeaning(type)) {\n        var parent = this.blockStack.slice(-1)[0];\n\n        if (parent) {\n          type = parent.type;\n        }\n      }\n\n      var block = {\n        tagName: tagName,\n        textFragments: [],\n        type: type,\n        styleStack: [NO_STYLE],\n        entityStack: [NO_ENTITY],\n        depth: hasDepth ? this.depth : 0,\n        data: data\n      };\n\n      if (allowRender) {\n        this.blockList.push(block);\n\n        if (hasDepth) {\n          this.depth += 1;\n        }\n      }\n\n      this.blockStack.push(block);\n\n      if (element.childNodes != null) {\n        Array.from(element.childNodes).forEach(this.processNode, this);\n      }\n\n      this.blockStack.pop();\n\n      if (allowRender && hasDepth) {\n        this.depth -= 1;\n      }\n    }\n  }, {\n    key: \"processInlineElement\",\n    value: function processInlineElement(element) {\n      var tagName = element.nodeName.toLowerCase();\n\n      if (tagName === 'br') {\n        this.processText(SOFT_BREAK_PLACEHOLDER);\n        return;\n      }\n\n      var block = this.blockStack.slice(-1)[0];\n      var style = block.styleStack.slice(-1)[0];\n      var entityKey = block.entityStack.slice(-1)[0];\n      var customInlineFn = this.options.customInlineFn;\n      var customInline = customInlineFn ? customInlineFn(element, this.inlineCreators) : null;\n\n      if (customInline != null) {\n        switch (customInline.type) {\n          case 'STYLE':\n            {\n              style = style.add(customInline.style);\n              break;\n            }\n\n          case 'ENTITY':\n            {\n              entityKey = customInline.entityKey;\n              break;\n            }\n        }\n      } else {\n        style = addStyleFromTagName(style, tagName, this.options.elementStyles);\n\n        if (ElementToEntity.hasOwnProperty(tagName)) {\n          // If the to-entity function returns nothing, use the existing entity.\n          entityKey = ElementToEntity[tagName](this, tagName, element) || entityKey;\n        }\n      }\n\n      block.styleStack.push(style);\n      block.entityStack.push(entityKey);\n\n      if (element.childNodes != null) {\n        Array.from(element.childNodes).forEach(this.processNode, this);\n      }\n\n      if (SELF_CLOSING_ELEMENTS.hasOwnProperty(tagName)) {\n        this.processText(\"\\xA0\");\n      }\n\n      block.entityStack.pop();\n      block.styleStack.pop();\n    }\n  }, {\n    key: \"processTextNode\",\n    value: function processTextNode(node) {\n      var text = node.nodeValue; // This is important because we will use \\r as a placeholder for a soft break.\n\n      text = text.replace(LINE_BREAKS, '\\n'); // Replace zero-width space (we use it as a placeholder in markdown) with a\n      // soft break.\n      // TODO: The import-markdown package should correctly turn breaks into <br>\n      // elements so we don't need to include this hack.\n\n      text = text.split(ZERO_WIDTH_SPACE).join(SOFT_BREAK_PLACEHOLDER);\n      this.processText(text);\n    }\n  }, {\n    key: \"processText\",\n    value: function processText(text) {\n      var block = this.blockStack.slice(-1)[0];\n      var style = block.styleStack.slice(-1)[0];\n      var entity = block.entityStack.slice(-1)[0];\n      var charMetadata = CharacterMetadata.create({\n        style: style,\n        entity: entity\n      });\n      var seq = Repeat(charMetadata, text.length);\n      block.textFragments.push({\n        text: text,\n        characterMeta: seq\n      });\n    }\n  }, {\n    key: \"processNode\",\n    value: function processNode(node) {\n      if (node.nodeType === NODE_TYPE_ELEMENT) {\n        // $FlowIssue\n        var _element = node;\n\n        var _tagName = _element.nodeName.toLowerCase();\n\n        if (INLINE_ELEMENTS.hasOwnProperty(_tagName)) {\n          this.processInlineElement(_element);\n        } else {\n          this.processBlockElement(_element);\n        }\n      } else if (node.nodeType === NODE_TYPE_TEXT) {\n        this.processTextNode(node);\n      }\n    }\n  }, {\n    key: \"createEntity\",\n    value: function createEntity(type, data) {\n      var mutability = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'MUTABLE';\n      this.contentStateForEntities = this.contentStateForEntities.createEntity(type, mutability, data);\n      return this.contentStateForEntities.getLastCreatedEntityKey();\n    }\n  }]);\n\n  return ContentGenerator;\n}();\n\nfunction trimLeadingNewline(text, characterMeta) {\n  if (text.charAt(0) === '\\n') {\n    text = text.slice(1);\n    characterMeta = characterMeta.slice(1);\n  }\n\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction trimLeadingSpace(text, characterMeta) {\n  while (text.charAt(0) === ' ') {\n    text = text.slice(1);\n    characterMeta = characterMeta.slice(1);\n  }\n\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction trimTrailingSpace(text, characterMeta) {\n  while (text.slice(-1) === ' ') {\n    text = text.slice(0, -1);\n    characterMeta = characterMeta.slice(0, -1);\n  }\n\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction collapseWhiteSpace(text, characterMeta) {\n  text = text.replace(/[ \\t\\n]/g, ' ');\n\n  var _trimLeadingSpace = trimLeadingSpace(text, characterMeta);\n\n  text = _trimLeadingSpace.text;\n  characterMeta = _trimLeadingSpace.characterMeta;\n\n  var _trimTrailingSpace = trimTrailingSpace(text, characterMeta);\n\n  text = _trimTrailingSpace.text;\n  characterMeta = _trimTrailingSpace.characterMeta;\n  var i = text.length;\n\n  while (i--) {\n    if (text.charAt(i) === ' ' && text.charAt(i - 1) === ' ') {\n      text = text.slice(0, i) + text.slice(i + 1);\n      characterMeta = characterMeta.slice(0, i).concat(characterMeta.slice(i + 1));\n    }\n  } // There could still be one space on either side of a softbreak.\n\n\n  var _replaceTextWithMeta = replaceTextWithMeta({\n    text: text,\n    characterMeta: characterMeta\n  }, SOFT_BREAK_PLACEHOLDER + ' ', SOFT_BREAK_PLACEHOLDER);\n\n  text = _replaceTextWithMeta.text;\n  characterMeta = _replaceTextWithMeta.characterMeta;\n\n  var _replaceTextWithMeta2 = replaceTextWithMeta({\n    text: text,\n    characterMeta: characterMeta\n  }, ' ' + SOFT_BREAK_PLACEHOLDER, SOFT_BREAK_PLACEHOLDER);\n\n  text = _replaceTextWithMeta2.text;\n  characterMeta = _replaceTextWithMeta2.characterMeta;\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction canHaveDepth(blockType) {\n  switch (blockType) {\n    case BLOCK_TYPE.UNORDERED_LIST_ITEM:\n    case BLOCK_TYPE.ORDERED_LIST_ITEM:\n      {\n        return true;\n      }\n\n    default:\n      {\n        return false;\n      }\n  }\n}\n\nfunction concatFragments(fragments) {\n  var text = '';\n  var characterMeta = Seq();\n  fragments.forEach(function (textFragment) {\n    text = text + textFragment.text;\n    characterMeta = characterMeta.concat(textFragment.characterMeta);\n  });\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction addStyleFromTagName(styleSet, tagName, elementStyles) {\n  switch (tagName) {\n    case 'b':\n    case 'strong':\n      {\n        return styleSet.add(INLINE_STYLE.BOLD);\n      }\n\n    case 'i':\n    case 'em':\n      {\n        return styleSet.add(INLINE_STYLE.ITALIC);\n      }\n\n    case 'u':\n    case 'ins':\n      {\n        return styleSet.add(INLINE_STYLE.UNDERLINE);\n      }\n\n    case 'code':\n      {\n        return styleSet.add(INLINE_STYLE.CODE);\n      }\n\n    case 's':\n    case 'del':\n      {\n        return styleSet.add(INLINE_STYLE.STRIKETHROUGH);\n      }\n\n    default:\n      {\n        // Allow custom styles to be provided.\n        if (elementStyles && elementStyles[tagName]) {\n          return styleSet.add(elementStyles[tagName]);\n        }\n\n        return styleSet;\n      }\n  }\n}\n\nfunction hasSemanticMeaning(blockType) {\n  return blockType !== BLOCK_TYPE.UNSTYLED;\n}\n\nfunction toStringMap(input) {\n  var result = {};\n\n  if (input !== null && _typeof(input) === 'object' && !Array.isArray(input)) {\n    var obj = input;\n\n    for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n      var _key = _Object$keys[_i];\n      var value = obj[_key];\n\n      if (typeof value === 'string') {\n        result[_key] = value;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction isAllowedHref(input) {\n  if (input == null || input.match(DATA_URL)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport function stateFromElement(element, options) {\n  return new ContentGenerator(options).process(element);\n}\nexport default stateFromElement;", "function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar EMPTY_ATTR_LIST = [];\nexport var NODE_TYPE_ELEMENT = 1;\nexport var NODE_TYPE_TEXT = 3;\nexport var NODE_TYPE_FRAGMENT = 11;\nexport var SELF_CLOSING = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true\n};\nexport var Node =\n/*#__PURE__*/\nfunction () {\n  function Node() {\n    _classCallCheck(this, Node);\n\n    _defineProperty(this, \"nodeType\", void 0);\n\n    _defineProperty(this, \"nodeName\", void 0);\n\n    _defineProperty(this, \"nodeValue\", void 0);\n\n    _defineProperty(this, \"childNodes\", void 0);\n  }\n\n  _createClass(Node, [{\n    key: \"toString\",\n    value: function toString(isXHTML) {\n      return isXHTML ? '' : '';\n    }\n  }]);\n\n  return Node;\n}();\nexport var TextNode =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(TextNode, _Node);\n\n  function TextNode(value) {\n    var _this;\n\n    _classCallCheck(this, TextNode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextNode).apply(this, arguments));\n    _this.nodeType = NODE_TYPE_TEXT;\n    _this.nodeName = '#text';\n    _this.nodeValue = value;\n    return _this;\n  } // eslint-disable-next-line no-unused-vars\n\n\n  _createClass(TextNode, [{\n    key: \"toString\",\n    value: function toString(isXHTML) {\n      return escape(this.nodeValue);\n    }\n  }]);\n\n  return TextNode;\n}(Node);\nexport var ElementNode =\n/*#__PURE__*/\nfunction (_Node2) {\n  _inherits(ElementNode, _Node2);\n\n  function ElementNode(name, attributes, childNodes) {\n    var _this2;\n\n    _classCallCheck(this, ElementNode);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ElementNode).apply(this, arguments));\n\n    _defineProperty(_assertThisInitialized(_this2), \"_name\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this2), \"_attrMap\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this2), \"_isSelfClosing\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this2), \"childNodes\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this2), \"attributes\", void 0);\n\n    if (attributes == null) {\n      attributes = EMPTY_ATTR_LIST;\n    }\n\n    var isSelfClosing = SELF_CLOSING[name] === true;\n    _this2.nodeType = NODE_TYPE_ELEMENT;\n    _this2._name = name.toLowerCase();\n    _this2.attributes = attributes;\n    _this2._attrMap = new Map(attributes.map(function (attr) {\n      return [attr.name, attr];\n    }));\n    _this2.nodeName = name.toUpperCase();\n    _this2.childNodes = [];\n    _this2._isSelfClosing = isSelfClosing;\n\n    if (!isSelfClosing && childNodes) {\n      childNodes.forEach(_this2.appendChild, _assertThisInitialized(_this2));\n    }\n\n    return _this2;\n  }\n\n  _createClass(ElementNode, [{\n    key: \"appendChild\",\n    value: function appendChild(node) {\n      if (node.nodeType === NODE_TYPE_FRAGMENT && node.childNodes) {\n        var _this$childNodes;\n\n        this.childNodes && (_this$childNodes = this.childNodes).push.apply(_this$childNodes, _toConsumableArray(node.childNodes));\n      } else {\n        this.childNodes && this.childNodes.push(node);\n      }\n    }\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(name) {\n      var attr = this._attrMap.get(name);\n\n      if (attr) {\n        return attr.value;\n      }\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(isXHTML) {\n      var attributes = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.attributes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = _step.value,\n              name = _step$value.name,\n              value = _step$value.value;\n          attributes.push(name + (value ? '=\"' + escapeAttr(value) + '\"' : ''));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var attrString = attributes.length ? ' ' + attributes.join(' ') : '';\n\n      if (this._isSelfClosing) {\n        return '<' + this._name + attrString + (isXHTML ? '/>' : '>');\n      }\n\n      var childNodes = this.childNodes ? this.childNodes.map(function (node) {\n        return node.toString(isXHTML);\n      }).join('') : '';\n      return '<' + this._name + attrString + '>' + childNodes + '</' + this._name + '>';\n    }\n  }, {\n    key: \"tagName\",\n    get: function get() {\n      return this.nodeName;\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return this.getAttribute('class') || '';\n    }\n  }]);\n\n  return ElementNode;\n}(Node);\nexport var FragmentNode =\n/*#__PURE__*/\nfunction (_Node3) {\n  _inherits(FragmentNode, _Node3);\n\n  function FragmentNode(childNodes) {\n    var _this3;\n\n    _classCallCheck(this, FragmentNode);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(FragmentNode).apply(this, arguments));\n\n    _defineProperty(_assertThisInitialized(_this3), \"childNodes\", void 0);\n\n    _this3.nodeType = NODE_TYPE_FRAGMENT;\n    _this3.childNodes = [];\n\n    if (childNodes) {\n      childNodes.forEach(_this3.appendChild, _assertThisInitialized(_this3));\n    }\n\n    return _this3;\n  }\n\n  _createClass(FragmentNode, [{\n    key: \"appendChild\",\n    value: function appendChild(node) {\n      if (node.nodeType === NODE_TYPE_FRAGMENT && node.childNodes) {\n        var _this$childNodes2;\n\n        this.childNodes && (_this$childNodes2 = this.childNodes).push.apply(_this$childNodes2, _toConsumableArray(node.childNodes));\n      } else {\n        this.childNodes && this.childNodes.push(node);\n      }\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(isXHTML) {\n      var childNodes = this.childNodes;\n      return childNodes ? childNodes.map(function (node) {\n        return node.toString(isXHTML);\n      }).join('') : '';\n    }\n  }]);\n\n  return FragmentNode;\n}(Node);\n\nfunction escape(html) {\n  return html.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\nfunction escapeAttr(html) {\n  return html.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}", "export var INLINE_ELEMENTS = {\n  a: 1,\n  abbr: 1,\n  area: 1,\n  audio: 1,\n  b: 1,\n  bdi: 1,\n  bdo: 1,\n  br: 1,\n  button: 1,\n  canvas: 1,\n  cite: 1,\n  code: 1,\n  command: 1,\n  datalist: 1,\n  del: 1,\n  dfn: 1,\n  em: 1,\n  embed: 1,\n  i: 1,\n  iframe: 1,\n  img: 1,\n  input: 1,\n  ins: 1,\n  kbd: 1,\n  keygen: 1,\n  label: 1,\n  map: 1,\n  mark: 1,\n  meter: 1,\n  noscript: 1,\n  object: 1,\n  output: 1,\n  progress: 1,\n  q: 1,\n  ruby: 1,\n  s: 1,\n  samp: 1,\n  script: 1,\n  select: 1,\n  small: 1,\n  span: 1,\n  strong: 1,\n  sub: 1,\n  sup: 1,\n  textarea: 1,\n  time: 1,\n  u: 1,\n  \"var\": 1,\n  video: 1,\n  wbr: 1,\n  acronym: 1,\n  applet: 1,\n  basefont: 1,\n  big: 1,\n  font: 1,\n  isindex: 1,\n  strike: 1,\n  style: 1,\n  tt: 1\n}; // These elements are special because they cannot contain text as a direct\n// child (some cannot contain childNodes at all).\n\nexport var SPECIAL_ELEMENTS = {\n  area: 1,\n  base: 1,\n  br: 1,\n  col: 1,\n  colgroup: 1,\n  command: 1,\n  dl: 1,\n  embed: 1,\n  head: 1,\n  hgroup: 1,\n  hr: 1,\n  iframe: 1,\n  img: 1,\n  input: 1,\n  keygen: 1,\n  link: 1,\n  meta: 1,\n  ol: 1,\n  optgroup: 1,\n  option: 1,\n  param: 1,\n  script: 1,\n  select: 1,\n  source: 1,\n  style: 1,\n  table: 1,\n  tbody: 1,\n  textarea: 1,\n  tfoot: 1,\n  thead: 1,\n  title: 1,\n  tr: 1,\n  track: 1,\n  ul: 1,\n  wbr: 1,\n  basefont: 1,\n  dialog: 1,\n  dir: 1,\n  isindex: 1\n}; // These elements are special because they cannot contain childNodes.\n// TODO: This is not an exhaustive list.\n\nexport var SELF_CLOSING_ELEMENTS = {\n  img: 1\n};", "export default function parseHTML(html) {\n  var doc;\n\n  if (typeof DOMParser !== 'undefined') {\n    var parser = new DOMParser();\n    doc = parser.parseFromString(html, 'text/html');\n  } else {\n    doc = document.implementation.createHTMLDocument('');\n\n    if (doc.documentElement) {\n      doc.documentElement.innerHTML = html;\n    }\n  } // This makes Flow happy\n\n\n  return doc.body || doc.createElement('body');\n}", "function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { stateFromElement } from 'draft-js-import-element';\nimport parseHTML from './parseHTML';\nvar defaultOptions = {};\nexport default function stateFromHTML(html, options) {\n  var _ref = options || defaultOptions,\n      parser = _ref.parser,\n      otherOptions = _objectWithoutProperties(_ref, [\"parser\"]);\n\n  if (parser == null) {\n    parser = parseHTML;\n  }\n\n  var element = parser(html);\n  return stateFromElement(element, otherOptions);\n}"],
  "mappings": "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",
  "names": ["_typeof", "obj", "_getPrototypeOf", "o", "_setPrototypeOf", "p", "Node", "TextNode", "ElementNode", "FragmentNode", "_typeof", "obj", "_defineProperty", "_classCallCheck", "_defineProperties", "_createClass", "getEntityData", "ContentGenerator"]
}
